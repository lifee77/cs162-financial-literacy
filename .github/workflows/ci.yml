# .github/workflows/tests.yml

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL:sqlite:///:memory:
      SECRET_KEY: test_secret_key
      FLASK_ENV: testing
      FLASK_APP: backend.app:create_app

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install flake8 pytest pytest-cov

      - name: Run database migrations (if using Flask-Migrate)
        run: |
          # Uncomment and adjust if you use Flask-Migrate or similar tools
          # flask db upgrade
          echo "Skipping migrations as using in-memory SQLite."

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 backend/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 backend/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests with pytest and coverage
        run: |
          pytest backend/unittest --maxfail=1 --disable-warnings -v --cov=backend --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true



  #deploy:
  #  needs: test
  #  runs-on: ubuntu-latest
  #  if: github.ref == 'refs/heads/main'
  #  
  #  steps:
  #  - uses: actions/checkout@v2
  #  
  #  - name: Deploy to production
  #    # Add your deployment steps here
  #    run: |
  #      echo "Add deployment commands here"